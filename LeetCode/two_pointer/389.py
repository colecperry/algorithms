# 389. Find the difference

# Topics: Hash Table, String, Bit Manipulation, Sorting

# You are given two strings s and t. String t is generated by random shuffling string s and then add one more letter at a random position. Return the letter that was added to t.

# Example 1:
# Input: s = "abcd", t = "abcde"
# Output: "e"
# Explanation: 'e' is the letter that was added.

# Example 2:
# Input: s = "", t = "y"
# Output: "y"

# How to Solve:
    # Key Insight:
    # ---------------------------------
    # - The string t is created by shuffling string s and adding one extra character.
    # - If we count the frequency of each character in t and subtract the frequency of characters
    #   in s, only the extra character will have a non-zero count at the end.
    # - This can be efficiently done using a Counter (a specialized dictionary for counting).

    # Steps to Solve:
    # ---------------------------------
    # 1. Use Counter to count the frequency of each character in t.
    # 2. Iterate over each character in s:
    #     - For each character in s, decrement its count in the Counter.
    # 3. After processing s, iterate over the Counter:
    #     - The character with a count not equal to zero is the extra character in t.
    #     - Return that character.

    # Time Complexity (TC): O(n)
    # ---------------------------------
    # - Building the Counter for t takes O(n) time.
    # - Iterating through s to subtract counts also takes O(n) time.
    # - Iterating over the Counter items (which has at most 26 items for lowercase letters) is O(1).
    # - Overall, the time complexity is O(n), where n is the length of s (and t is n+1).

    # Space Complexity (SC): O(1)
    # ---------------------------------
    # - The Counter stores character counts.
    # - Since the number of possible characters (e.g., lowercase a-z) is fixed and small, 
    #   the space is considered O(1) even though technically it uses extra space.


from collections import Counter

class Solution:
    def findTheDifference(s: str, t: str) -> str:
        # Count characters in t
        char_dict = Counter(t)
        
        # Subtract counts using characters in s
        for char in s:
            char_dict[char] -= 1
        
        # The character with count != 0 is the extra character
        for key, value in char_dict.items():
            if value != 0:
                return key


sol = Solution()
print(sol.findTheDifference("abcd", "abcde"))
print(sol.findTheDifference("", "y"))